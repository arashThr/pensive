{{if .ErrorMessage}}
  <div class="bg-red-50 border border-red-200 rounded-lg p-4 mb-4">
    <div class="flex items-center gap-2">
      <svg class="w-5 h-5 text-red-600 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-2.694-.833-3.464 0L3.34 16.5c-.77.833.192 2.5 1.732 2.5z" />
      </svg>
      <span class="text-red-800 font-medium">Error generating token</span>
    </div>
    <p class="text-red-700 mt-1 text-sm">{{.ErrorMessage}}</p>
  </div>
{{else}}
  <!-- Success State -->
  <div class="bg-emerald-50 border border-emerald-200 rounded-lg p-6">
    <div class="flex items-center gap-2 mb-4">
      <svg class="w-5 h-5 text-emerald-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7" />
      </svg>
      <span class="text-emerald-900 font-medium">Token generated successfully!</span>
    </div>
    
    <!-- Token Display -->
    <div class="bg-white rounded-lg p-4 border border-emerald-200 mb-4">
      <label class="block text-sm font-medium text-emerald-900 mb-2">Your new API token:</label>
      <div class="flex items-center gap-2">
        <input 
          class="flex-1 px-4 py-2 border border-gray-300 bg-white text-gray-900 rounded-lg font-mono text-sm" 
          type="text" 
          value="{{.APIToken}}" 
          readonly 
          id="api-token"
          onclick="this.select()"
        />
        <button 
          class="p-2 text-emerald-600 hover:text-emerald-700 hover:bg-emerald-100 rounded-lg transition-colors" 
          onclick="copyToken()"
          title="Copy token">
          <svg class="w-5 h-5 copy-icon" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z" />
          </svg>
          <svg class="w-5 h-5 check-icon hidden text-emerald-600" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7" />
          </svg>
        </button>
      </div>
      
      <!-- Copy Feedback -->
      <div id="copy-message" class="hidden mt-2 text-sm text-emerald-700 flex items-center gap-1">
        <svg class="w-4 h-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7" />
        </svg>
        Token copied to clipboard!
      </div>
    </div>
    
    <!-- Security Warning -->
    <div class="bg-amber-50 border border-amber-200 rounded-lg p-3">
      <div class="flex items-start gap-2">
        <svg class="w-5 h-5 text-amber-600 flex-shrink-0 mt-0.5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-2.694-.833-3.464 0L3.34 16.5c-.77.833.192 2.5 1.732 2.5z" />
        </svg>
        <div>
          <p class="text-amber-900 font-medium text-sm">Keep this token secure</p>
          <p class="text-amber-800 text-xs mt-1">
            Store this token safely - it won't be shown again and provides full access to your bookmarks.
          </p>
        </div>
      </div>
    </div>
  </div>

  <script>
    function copyToken() {
      const tokenInput = document.getElementById('api-token');
      const copyIcon = document.querySelector('.copy-icon');
      const checkIcon = document.querySelector('.check-icon');
      const copyMessage = document.getElementById('copy-message');
      
      // Copy to clipboard
      navigator.clipboard.writeText(tokenInput.value).then(() => {
        // Show success feedback
        copyIcon.classList.add('hidden');
        checkIcon.classList.remove('hidden');
        copyMessage.classList.remove('hidden');
        
        // Reset after 3 seconds
        setTimeout(() => {
          copyIcon.classList.remove('hidden');
          checkIcon.classList.add('hidden');
          copyMessage.classList.add('hidden');
        }, 3000);
      }).catch(() => {
        // Fallback: select the text
        tokenInput.select();
        tokenInput.setSelectionRange(0, 99999); // For mobile devices
      });
    }
  </script>
{{end}}