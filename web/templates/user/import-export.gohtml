{{template "header" .}}

<div class="px-6 py-12 max-w-4xl mx-auto">
  <div class="mb-8">
    <h1 class="text-3xl font-bold text-gray-900 mb-2 tracking-tight">Import & Export Data</h1>
    <p class="text-gray-600">Manage your bookmark collection by importing from other services or exporting your data.</p>
  </div>

  <!-- Export Section -->
  <section class="bg-white rounded-xl border border-gray-300 p-6 mb-8">
    <h2 class="text-xl font-semibold text-gray-900 mb-4 flex items-center">
      <svg class="w-5 h-5 mr-2 text-green-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M15 13l-3-3m0 0l-3 3m3-3v12" />
      </svg>
      Export Your Data
    </h2>
    <div class="text-sm text-gray-600 mb-4">
      Download all your bookmarks and data in a portable format.
    </div>
    <div class="bg-gray-50 rounded-lg p-4 border border-gray-200 mb-4">
      <p class="text-sm text-gray-700 mb-2">
        <span class="font-medium">Export includes:</span>
      </p>
      <ul class="text-sm text-gray-600 list-disc list-inside space-y-1">
        <li>All bookmarks with metadata</li>
        <li>Tags and categories</li>
        <li>Creation dates and notes</li>
      </ul>
    </div>
    <form action="/users/export" method="post">
      {{csrfField}}
      <button
        type="submit"
        class="inline-flex items-center justify-center px-4 py-2 bg-green-600 text-white rounded-lg text-sm font-medium hover:bg-green-700"
      >
        <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 10v6m0 0l-3-3m3 3l3-3m2 8H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z" />
        </svg>
        Export Data
      </button>
    </form>
  </section>

  <!-- Import Section -->
  <section class="bg-white rounded-xl border border-gray-300 p-6">
    <h2 class="text-xl font-semibold text-gray-900 mb-4 flex items-center">
      <svg class="w-5 h-5 mr-2 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M9 19l3 3m0 0l3-3m-3 3V10" />
      </svg>
      Import Your Data
    </h2>
    <div class="text-sm text-gray-600 mb-6">
      Import bookmarks from other services into your collection.
    </div>

    <!-- Import from Pocket -->
    <div class="border border-gray-200 rounded-lg p-6">
      <div class="flex items-center mb-4">
        <div class="flex-shrink-0 w-10 h-10 bg-red-100 rounded-lg flex items-center justify-center mr-3">
          <svg class="w-6 h-6 text-red-600" fill="currentColor" viewBox="0 0 24 24">
            <path d="M18.84 6.45c-.65-.65-1.77-.65-2.42 0l-4.42 4.42-4.42-4.42c-.65-.65-1.77-.65-2.42 0s-.65 1.77 0 2.42l5.63 5.63c.33.33.76.49 1.21.49s.88-.16 1.21-.49l5.63-5.63c.65-.65.65-1.77 0-2.42zM12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2z"/>
          </svg>
        </div>
        <div>
          <h3 class="text-lg font-medium text-gray-900">Import from Pocket</h3>
          <p class="text-sm text-gray-600">Upload your Pocket export file (ZIP format)</p>
        </div>
      </div>

      <form action="/users/import" method="post" enctype="multipart/form-data" class="space-y-4">
        {{csrfField}}
        <input type="hidden" name="source" value="pocket">
        
        <!-- File Upload -->
        <div>
          <label for="import-file" class="block text-sm font-medium text-gray-700 mb-2">
            Select Pocket Export File (ZIP)
          </label>
          <div id="file-upload-area" class="mt-1 flex justify-center px-6 pt-5 pb-6 border-2 border-gray-300 border-dashed rounded-lg hover:border-gray-400 transition-all duration-200">
            <div class="space-y-1 text-center">
              <!-- Default upload icon -->
              <svg id="upload-icon" class="mx-auto h-12 w-12 text-gray-400" stroke="currentColor" fill="none" viewBox="0 0 48 48">
                <path d="M28 8H12a4 4 0 00-4 4v20m32-12v8m0 0v8a4 4 0 01-4 4H12a4 4 0 01-4-4v-4m32-4l-3.172-3.172a4 4 0 00-5.656 0L28 28M8 32l9.172-9.172a4 4 0 015.656 0L28 28m0 0l4 4m4-24h8m-4-4v8m-12 4h.02" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
              </svg>
              <!-- Success icon (hidden by default) -->
              <svg id="success-icon" class="mx-auto h-12 w-12 text-green-500 hidden" fill="none" stroke="currentColor" viewBox="0 0 48 48">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />
              </svg>
              
              <div id="upload-text" class="flex text-sm text-gray-600">
                <label for="import-file" class="relative cursor-pointer bg-white rounded-md font-medium text-blue-600 hover:text-blue-500 focus-within:outline-none focus-within:ring-2 focus-within:ring-offset-2 focus-within:ring-blue-500">
                  <span>Upload a file</span>
                  <input id="import-file" name="import-file" type="file" accept=".zip" required class="sr-only">
                </label>
                <p class="pl-1">or drag and drop</p>
              </div>
              
              <!-- File info (hidden by default) -->
              <div id="file-info" class="hidden">
                <p id="file-name" class="text-sm font-medium text-gray-900"></p>
                <p id="file-size" class="text-xs text-gray-500"></p>
                <button type="button" id="remove-file" class="mt-2 text-xs text-red-600 hover:text-red-500 underline">Remove file</button>
              </div>
              
              <p id="upload-hint" class="text-xs text-gray-500">ZIP files only</p>
            </div>
          </div>
        </div>

        <!-- Submit Button -->
        <div class="pt-4">
          <button
            type="submit"
            class="w-full flex justify-center py-3 px-4 border border-transparent rounded-lg text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500"
          >
            <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M9 19l3 3m0 0l3-3m-3 3V10" />
            </svg>
            Start Import
          </button>
        </div>
      </form>

      <!-- Help Text -->
      <div class="mt-6 p-4 bg-blue-50 rounded-lg border border-blue-200">
        <div class="flex">
          <div class="flex-shrink-0">
            <svg class="h-5 w-5 text-blue-400" fill="currentColor" viewBox="0 0 20 20">
              <path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z" clip-rule="evenodd" />
            </svg>
          </div>
          <div class="ml-3">
            <h3 class="text-sm font-medium text-blue-800">How to export from Pocket</h3>
            <div class="mt-2 text-sm text-blue-700">
              <ol class="list-decimal list-inside space-y-1">
                <li>Go to <a href="https://getpocket.com/export" target="_blank" class="underline hover:no-underline">getpocket.com/export</a></li>
                <li>Click "Export CSV file"</li>
                <li>Download the ZIP file when ready</li>
                <li>Upload that ZIP file here</li>
              </ol>
            </div>
          </div>
        </div>
      </div>
    </div>
  </section>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
  const fileInput = document.getElementById('import-file');
  const uploadArea = document.getElementById('file-upload-area');
  const uploadIcon = document.getElementById('upload-icon');
  const successIcon = document.getElementById('success-icon');
  const uploadText = document.getElementById('upload-text');
  const fileInfo = document.getElementById('file-info');
  const fileName = document.getElementById('file-name');
  const fileSize = document.getElementById('file-size');
  const uploadHint = document.getElementById('upload-hint');
  const removeFileBtn = document.getElementById('remove-file');

  function formatFileSize(bytes) {
    if (bytes === 0) return '0 Bytes';
    const k = 1024;
    const sizes = ['Bytes', 'KB', 'MB', 'GB'];
    const i = Math.floor(Math.log(bytes) / Math.log(k));
    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];
  }

  function showFileSelected(file) {
    // Update visual state
    uploadArea.classList.remove('border-gray-300', 'border-dashed');
    uploadArea.classList.add('border-green-500', 'border-solid', 'bg-green-50');
    
    // Hide upload elements
    uploadIcon.classList.add('hidden');
    uploadText.classList.add('hidden');
    uploadHint.classList.add('hidden');
    
    // Show success elements
    successIcon.classList.remove('hidden');
    fileInfo.classList.remove('hidden');
    
    // Update file info
    fileName.textContent = file.name;
    fileSize.textContent = formatFileSize(file.size);
  }

  function resetUploadState() {
    // Reset visual state
    uploadArea.classList.remove('border-green-500', 'border-solid', 'bg-green-50');
    uploadArea.classList.add('border-gray-300', 'border-dashed');
    
    // Show upload elements
    uploadIcon.classList.remove('hidden');
    uploadText.classList.remove('hidden');
    uploadHint.classList.remove('hidden');
    
    // Hide success elements
    successIcon.classList.add('hidden');
    fileInfo.classList.add('hidden');
    
    // Clear file input
    fileInput.value = '';
  }

  // Handle file selection
  fileInput.addEventListener('change', function(e) {
    const file = e.target.files[0];
    if (file) {
      showFileSelected(file);
    }
  });

  // Handle remove file button
  removeFileBtn.addEventListener('click', function() {
    resetUploadState();
  });

  // Handle drag and drop
  uploadArea.addEventListener('dragover', function(e) {
    e.preventDefault();
    uploadArea.classList.add('border-blue-500', 'bg-blue-50');
  });

  uploadArea.addEventListener('dragleave', function(e) {
    e.preventDefault();
    uploadArea.classList.remove('border-blue-500', 'bg-blue-50');
  });

  uploadArea.addEventListener('drop', function(e) {
    e.preventDefault();
    uploadArea.classList.remove('border-blue-500', 'bg-blue-50');
    
    const files = e.dataTransfer.files;
    if (files.length > 0) {
      const file = files[0];
      if (file.name.toLowerCase().endsWith('.zip')) {
        // Manually set the file to the input
        const dt = new DataTransfer();
        dt.items.add(file);
        fileInput.files = dt.files;
        
        showFileSelected(file);
      } else {
        alert('Please select a ZIP file.');
      }
    }
  });
});
</script>

{{template "footer" .}}